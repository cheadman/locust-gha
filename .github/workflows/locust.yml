name: Load Testing with Locust

on:
  workflow_dispatch:
    inputs:
      endpoint:
        description: 'Endpoint URL'
        required: true
        default: ''
      test_file:
        description: 'Name of the test file in the locust directory to run.'
        required: true
        default: 'load.py'
      users:
        description: 'Number of Users'
        required: false
        default: '1'
      spawn_rate:
        description: 'Spawn Rate'
        required: false
        default: '1'
      test_duration:
        description: 'Load test duration in minutes'
        required: false
        default: '1'
      wait_time:
        description: 'The time between requests for a user (in the format min-max)'
        required: false
        default: '1-3'
      req_type:
        description: 'GET, POST, PUT, PATCH DELETE'
        required: false
        default: 'GET'
      req_body:
        description: 'The message body of a request that supports it'
        required: false
        default: '{"locust": "is neat"}'
      headers:
        description: 'The http headers to include in the request'
        required: false
        default: '{"HeaderName1": "HeaderValue1", "HeaderName2": "HeaderValue2"}'
  push:
    branches:
      - locust

jobs:
  load_test:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'
      
      - name: Install dependencies
        run: |
          pip install locust
      
      - name: Parse wait time range
        id: parse_wait_time
        run: |
          min_wait=`echo ${{ github.event.inputs.wait_time }} | cut -d '-' -f 1`
          max_wait=`echo ${{ github.event.inputs.wait_time }} | cut -d '-' -f 2`
          echo "::set-output name=min_wait::${min_wait}"
          echo "::set-output name=max_wait::${max_wait}"
      
      - name: Run Locust load test
        env:
          ENDPOINT: ${{ github.event.inputs.endpoint }}
          TEST_FILE: ${{ github.event.inputs.test_file }}
          USERS: ${{ github.event.inputs.users }}
          SPAWN_RATE: ${{ github.event.inputs.spawn_rate }}
          TEST_DURATION: ${{ github.event.inputs.test_duration }}
          LOCUST_MIN_WAIT: ${{ steps.parse_wait_time.outputs.min_wait }}
          LOCUST_MAX_WAIT: ${{ steps.parse_wait_time.outputs.max_wait }}
          LOCUST_HEADERS: ${{ github.event.inputs.headers }}
          REQ_BODY: ${{ github.event.inputs.req_body }}
          REQ_TYPE: ${{ github.event.inputs.req_type }}

        run: |
          mkdir reports
          echo locust --host=$ENDPOINT -f locust/${TEST_FILE} --users $USERS --spawn-rate $SPAWN_RATE --run-time ${TEST_DURATION}m --csv=reports/report.csv --html=reports/report.html --headless
          locust --host=$ENDPOINT -f locust/${TEST_FILE} --users $USERS --spawn-rate $SPAWN_RATE --run-time ${TEST_DURATION}m --csv=reports/report.csv --html=reports/report.html --headless
      
      - name: Upload reports
        uses: actions/upload-artifact@v2
        with:
          name: Load_Test_Reports
          path: reports
